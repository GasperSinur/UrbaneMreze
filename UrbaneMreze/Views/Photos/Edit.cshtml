@model UrbaneMreze.Models.PhotoEditViewModel

@{
    ViewBag.Title = "Uredi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Uredi</h2>


@using (Html.BeginForm("Edit", "Photos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Fotografija</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PhotoGuid)

    <div class="form-group">
        @Html.LabelFor(model => model.SpotGuid, "Lokacija", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SpotGuid", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SpotGuid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.File, htmlAttributes: new { @class = "form-control my-file-upload", @type = "file" })
            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Trenutna Fotografija</label>
        <div class="col-md-10">
            @{
                if (Model.File != null && Model.File.ContentLength > 0)
                {
                    Html.Label("Trenutna Ikona:");
                    @:<br />
                    @:<img src="@ViewBag.ImgSrc" height="250" />
                }
            }
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Shrani" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Nazaj na seznam", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
