@model UrbaneMreze.Models.Spot
@{
    ViewBag.Title = "Domov";
}
@using PagedList.Mvc;
@using PagedList;

<div class="container-fluid">
    <div class="row">
        <div class="row">
            <div class="col-sm-7">
                <table class="table">
                    <tr>
                        <th>
                            @Html.ActionLink("Ime lokacije", "Index", new { sortOrder = ViewBag.NameSortParm })
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th>
                            @Html.ActionLink("Datum nastanka", "Index", new { sortOrder = ViewBag.DateSortParm })
                        </th>
                    </tr>
                    @foreach (var item in @ViewBag.SpotList)
                    {
                        string ime = item.SpotName;
                        <tr>
                            <td>
                                @Html.ActionLink(ime, "Details", new { id = item.SpotGuid })
                            </td>
                            <td>
                                @item.Description
                            </td>
                            <td>
                                @item.DateCreated
                            </td>
                        </tr>
                    }
                </table>
                <br />
                <div class="row">
                    <div class="col-sm-12 text-center">
                        Stran @(ViewBag.SpotList.PageCount < ViewBag.SpotList.PageNumber ? 0 : ViewBag.SpotList.PageNumber) od @ViewBag.SpotList.PageCount

                        @Html.PagedListPager((IPagedList)ViewBag.SpotList, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                    </div>
                </div>
            </div>
            <div id="map" class="col-sm-5 map-index"></div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                @if (Request.IsAuthenticated)
                {
                    <div class="row">
                        <div class="col-sm-12 create-spot">
                            <div class="row">
                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="col-sm-6">

                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.LabelFor(model => model.SpotName, htmlAttributes: new { @class = "control-label col-md-6 margin-bot" })
                                        <div class="col-md-6 margin-bot">
                                            @Html.EditorFor(model => model.SpotName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SpotName, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-6 margin-bot" })
                                        <div class="col-md-6 margin-bot">
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                    <div class="col-sm-6">

                                        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-6 margin-bot" })
                                        <div class="col-md-6 margin-bot">
                                            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-6 margin-bot" })
                                        <div class="col-md-6 margin-bot">
                                            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-md-6">Tip</label>
                                            <div class="col-md-6">
                                                @Html.DropDownList("TypeGuid", null, htmlAttributes: new { @class = "form-control" })
                                            </div>
                                        </div>

                                        <div class="col-md-12">
                                            <input type="submit" value="Dodaj lokacijo" class="btn btn-default" />
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                }
                else
                {
                    <div class="row">
                        <div class="col-sm-12 create-spot">
                            <p class="text-center">
                                Za dodajanje lokacij se morate @Html.ActionLink("prijaviti", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" }).
                            </p>
                        </div>
                    </div>
                }
            </div>
        </div>

        <script>
            var markers = @Html.Raw(@ViewBag.Markers);
            function initMap() {
                var mapOptions = {
                    center: new google.maps.LatLng(45.8010824, 15.1710089),
                    zoom: 12,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    gestureHandling: 'cooperative'
                };
                var infoWindow = new google.maps.InfoWindow();
                var map = new google.maps.Map(document.getElementById("map"), mapOptions);
                for (i = 0; i < markers.length; i++) {
                    var data = markers[i]
                    var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                    var icon = {
                        url: "/Images/pinGreen.png",
                        scaledSize: new google.maps.Size(20, 35),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(10, 35)
                    }
                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                        icon: icon,
                        title: data.title
                    });
                    (function (marker, data) {
                        google.maps.event.addListener(marker, "click", function (e) {
                            infoWindow.setContent(
                                "<div class='infoWindow'><span class='bold-text'>" + data.title + "</span><br/><p>" + data.description + "</p><p><a href='https://www.google.com/maps/?q=" + data.lat + "," + data.lng + "' target='_blank'>Prikaži v Google Zemljevidih</a></p></div>"
                            );
                            infoWindow.open(map, marker);
                        });
                    })(marker, data);
                }
            }
        </script>

        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCEAiYQrITQJClN12bmTuXXF4AQCkkiCRk&callback=initMap">
        </script>

    </div>
</div>